name: Build/Publish/Deploy Workflow
on:
  push:
    branches:
      - main

jobs:
  build-publish:
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-latest
    name: Build and Publish Job
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install
      - name: Run Linter
        run: pnpm lint
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to the GitHub container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push frontend/backend
        uses: docker/bake-action@v4
        with:
          push: true
      - name: Build and push db-migrate
        uses: docker/bake-action@v4
        env:
          NK_CLIENT_ID: ${{ secrets.nk_client_id }}
          MAP_KEY: ${{ secrets.map_key }}
        with:
          files: |
            docker-compose.yaml
            docker-compose.migrate.yaml
          push: true
  # deploy:
  #   runs-on: ubuntu-latest
  #   name: Deploy to Remote Job
  #   steps:
  #     - name: Clone compose files
  #       uses: actions/checkout@v3
  #       with:
  #         sparse-checkout: |
  #           docker-compose.yaml
  #           docker-compose.migrate.yaml
  #     - name: Create secrets file
  #       uses: SpicyPizza/create-envfile@v2.0
  #       with:
  #         envkey_NK_CLIENT_ID: ${{ secrets.nk_client_id }}
  #         envkey_NK_CLIENT_SECRET: ${{ secrets.nk_client_secret }}
  #         envkey_DB_USERNAME: ${{ secrets.db_username }}
  #         envkey_DB_PASSWORD: ${{ secrets.db_password }}
  #         envkey_DB_NAME: ${{ secrets.db_name }}
  #         file_name: .env.production
  #     - name: SSH remove old containers
  #       uses: appleboy/ssh-action@v1.0.0
  #       with:
  #         host: ${{ secrets.remote_host }}
  #         port: ${{ secrets.remote_ssh_port }}
  #         username: ${{ secrets.remote_ssh_username }}
  #         key: ${{ secrets.remote_ssh_key }}
  #         script: if test -f docker-compose.yaml; then docker compose down; fi
  #     - name: SSH copy updated compose files and secrets file
  #       uses: appleboy/scp-action@v0.1.4
  #       with:
  #         host: ${{ secrets.remote_host }}
  #         port: ${{ secrets.remote_ssh_port}}
  #         username: ${{ secrets.remote_ssh_username }}
  #         key: ${{ secrets.remote_ssh_key }}
  #         source: "docker-compose.yaml,docker-compose.migrate.yaml,.env.production"
  #     - name: SSH run DB migration
  #       uses: appleboy/ssh-action@v1.0.0
  #       with:
  #         host: ${{ secrets.remote_host }}
  #         port: ${{ secrets.remote_ssh_port }}
  #         username: ${{ secrets.remote_ssh_username }}
  #         key: ${{ secrets.remote_ssh_key }}
  #         script: docker compose -f docker-compose.migrate.yaml --env-file .env.production up --abort-on-container-exit --exit-code-from db-migrate
  #     - name: SSH run production
  #       uses: appleboy/ssh-action@v1.0.0
  #       with:
  #         host: ${{ secrets.remote_host }}
  #         port: ${{ secrets.remote_ssh_port }}
  #         username: ${{ secrets.remote_ssh_username }}
  #         key: ${{ secrets.remote_ssh_key }}
  #         script: docker compose -f docker-compose.yaml --env-file .env.production up -d
